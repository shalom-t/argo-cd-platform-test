#############################################
# Superset helm chart additional values file #
#############################################

# Service configuration
service:
  # Service type is ClusterIP
  # Reason: Exposes Superset service internally within the Kubernetes cluster.
  # This is typical for applications accessed behind an ingress or reverse proxy,
  # instead of direct external access.
  type: ClusterIP
  # Port where Superset listens internally
  # Reason: Superset's default web server runs on 8088.
  port: 8088 # 8088 is the default port for Superset

# Bootstrap and initialize Superset database and admin user
init:
  # When enabled, Helm will create a Kubernetes Job to initialize Superset.
  # The Job runs database migrations and creates the initial admin user.
  # This is controlled by this 'enabled' flag.
  enabled: true
  adminUser:
    # These values are passed as environment variables to the init Job.
    # Superset's init script uses them to create the admin user.
    # Superset Application user layer creation
    username: admin 
    firstname: Superset
    lastname: Admin
    email: admin@superset.local
    password: admin1234

# Superset connection configuration
# These values tell Superset how to connect to PostgreSQL and Redis
supersetNode:
  connections:
    # Redis connection for caching and Celery
    redis_host: '{{ .Release.Name }}-redis-master'
    redis_port: "6379"
    redis_password: superset
    # PostgreSQL connection for metadata
    db_host: '{{ .Release.Name }}-postgresql'
    db_port: "5432"
    db_user: superset
    db_pass: superset
    db_name: superset

configOverrides:
  # Set the row limit to 1000
  # Reason: Prevents the UI from freezing when displaying large datasets.
  secret: |
    SECRET_KEY = 'QjgIqDzX7utN2qCp4YrtML+Co5U/oQxSo3F30KFh6V3RCb0Myi2bfVlZ'

# PostgreSQL for metadata storage
postgresql:
  # To overwrite the image 
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: latest
  # Enable PostgreSQL (required for Superset metadata storage)
  enabled: true
  
  auth:
    # Username for the application database user (used by Superset to connect)
    # This creates a non-superuser account for Superset
    username: superset
    
    # Password for the application user
    password: superset
    
    # Database name to create for Superset
    # Superset will store its metadata (dashboards, users, etc.) here
    database: superset
    
    # Password for the PostgreSQL superuser (postgres)
    # Required for administrative tasks and initial setup
    postgresPassword: superset123
  
  primary:
    persistence:
      # Enable persistent storage for PostgreSQL data
      # Prevents data loss when pods restart
      enabled: true
      
      # Size of the persistent volume
      size: 8Gi

# Redis for caching and Celery task queue
redis:
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: latest
  # Enable Redis (required for Superset caching and async tasks)
  enabled: true
  
  # Redis authentication configuration
  auth:
    # Enable password authentication
    enabled: true
    # Password for Redis - must match what Superset expects
    # The Superset chart will automatically configure this
    password: superset
  
  master:
    persistence:
      # Enable persistent storage for Redis data
      # Stores cached data and Celery task queue across restarts
      enabled: true
      # Size of the persistent volume
      size: 8Gi

# Resource limits for k3d cluster
resources:
  requests:
    # Minimal CPU guaranteed for Superset pod
    # Reason: Ensures the pod always has 100m (0.1 CPU) available on the node.
    cpu: 100m
    # Minimal memory guaranteed for Superset pod
    # Reason: Ensures the pod has enough memory to avoid out-of-memory errors.
    memory: 512Mi
  limits:
    # Max CPU available to the Superset pod
    # Reason: Prevents the pod from using more than 1 CPU core.
    cpu: 1000m
    # Max memory for the pod
    # Reason: Prevents pod from consuming more than 1Gi memory, protecting the node from overuse.
    memory: 1Gi

# Additional worker resources
supersetWorker:
  resources:
    requests:
      # CPU guaranteed for Celery worker pods
      # Reason: Ensures stable resource allocation for background task processing.
      cpu: 100m
      # Minimal memory guaranteed for worker pods.
      memory: 512Mi
    limits:
      # Max CPU for worker pods
      cpu: 500m
      # Max memory for worker pods
      memory: 1Gi

# Disable default ingress (using Traefik IngressRoute instead)
ingress:
  # Disables the default ingress created by the Helm chart
  # Reason: Allows using a custom IngressRoute (Traefik) defined elsewhere in the deployment.
  enabled: false

# Security context
# Run pod as root user (UID 0)
# Reason: Sometimes necessary for custom images or needing special permissions,
# but generally consider using a non-root user for better security.
runAsUser: 0